<#@ template debug="false" hostspecific="true" language="C#" #>
<#@ CleanupBehavior processor="T4VSHost" CleanupAfterProcessingtemplate="true" #>
<#@ include file="$(SolutionDir)Packages\T4.TemplateFileManager\tools\ttinc\TemplateFilemanager.CS.ttinclude" #>
<#@ output extension=".txt" #>
<#@ assembly name="System.Core" #>
<#@ assembly name="$(SolutionDir)Generator\Gu.Units.Generator.exe" #>
<#@ import namespace="Gu.Units.Generator" #>
<#
//var fileProperties = new FileProperties()
//{
//	BuildAction = BuildAction.EmbeddedResource
//};

var fileManager = TemplateFileManager.Create(this);
fileManager.IsAutoIndentEnabled = true;
fileManager.CanOverwriteExistingFile = true;

// init handling for parameter templates
var paramTmpl = ParamTextTemplate.Create(this.Host);
var session = ParamTextTemplate.GetSessionObject();
var settings = Settings.Instance;
this.Write(string.Format("Read Settings found {0} quantities", settings.Quantities.Count));

fileManager.StartNewFile("Enumerable.generated." + Settings.Extension, Settings.ProjectName, Settings.FolderName, null);
var output = paramTmpl.TransformText("Enumerable.tt", session);
this.Write(output);

fileManager.Process();
#>